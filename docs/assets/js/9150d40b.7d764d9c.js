"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3916],{4617:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"Getting-started/configuration","title":"Configuration Guide","description":"This guide explains how to configure the React Firebase Chat Application to match your specific requirements and preferences.","source":"@site/docs-source/Getting-started/configuration.md","sourceDirName":"Getting-started","slug":"/Getting-started/configuration","permalink":"/CustomChatApp/docs/Getting-started/configuration","draft":false,"unlisted":false,"editUrl":"https://github.com/Emir2099/CustomChatApp/docs-source/Getting-started/configuration.md","tags":[],"version":"current","lastUpdatedAt":1747596735000,"sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Installation & Setup","permalink":"/CustomChatApp/docs/Getting-started/installation"}}');var s=t(4848),i=t(8453);const o={sidebar_position:2},r="Configuration Guide",c={},l=[{value:"Environment Configuration",id:"environment-configuration",level:2},{value:"Firebase Configuration",id:"firebase-configuration",level:2},{value:"Application Constants",id:"application-constants",level:2},{value:"Theme Configuration",id:"theme-configuration",level:2},{value:"Feature Configuration",id:"feature-configuration",level:2},{value:"Chat Feature Configuration",id:"chat-feature-configuration",level:3},{value:"Notification Configuration",id:"notification-configuration",level:3},{value:"Firebase Security Rules",id:"firebase-security-rules",level:2},{value:"Realtime Database Rules",id:"realtime-database-rules",level:3},{value:"Storage Rules",id:"storage-rules",level:3},{value:"Performance Optimization Settings",id:"performance-optimization-settings",level:2},{value:"Customizing Components",id:"customizing-components",level:2},{value:"Chat Message Styles",id:"chat-message-styles",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"Firebase Cloud Functions",id:"firebase-cloud-functions",level:3},{value:"Progressive Web App Configuration",id:"progressive-web-app-configuration",level:3},{value:"White-labeling",id:"white-labeling",level:2},{value:"Debugging and Testing",id:"debugging-and-testing",level:2},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"configuration-guide",children:"Configuration Guide"})}),"\n",(0,s.jsx)(n.p,{children:"This guide explains how to configure the React Firebase Chat Application to match your specific requirements and preferences."}),"\n",(0,s.jsx)(n.h2,{id:"environment-configuration",children:"Environment Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The application uses environment variables for configuration. Create a ",(0,s.jsx)(n.code,{children:".env"})," file in the root directory with the following variables:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'# Firebase configuration\nREACT_APP_FIREBASE_API_KEY=your_api_key\nREACT_APP_FIREBASE_AUTH_DOMAIN=your_auth_domain\nREACT_APP_FIREBASE_PROJECT_ID=your_project_id\nREACT_APP_FIREBASE_STORAGE_BUCKET=your_storage_bucket\nREACT_APP_FIREBASE_MESSAGING_SENDER_ID=your_messaging_sender_id\nREACT_APP_FIREBASE_APP_ID=your_app_id\nREACT_APP_FIREBASE_DATABASE_URL=your_database_url\n\n# Application settings\nREACT_APP_NAME="Your Chat App Name"\nREACT_APP_DESCRIPTION="Your chat application description"\nREACT_APP_MAX_FILE_SIZE=10485760  # 10MB in bytes\nREACT_APP_THEME=light  # default theme: light or dark\n'})}),"\n",(0,s.jsxs)(n.p,{children:["For production deployment, create a ",(0,s.jsx)(n.code,{children:".env.production"})," file with production-specific values."]}),"\n",(0,s.jsx)(n.h2,{id:"firebase-configuration",children:"Firebase Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["The application connects to Firebase through the ",(0,s.jsx)(n.code,{children:"firebase.js"})," configuration file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// src/config/firebase.js\nimport { initializeApp } from 'firebase/app';\nimport { getAuth } from 'firebase/auth';\nimport { getDatabase } from 'firebase/database';\nimport { getStorage } from 'firebase/storage';\n\n// Firebase configuration from environment variables\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase services\nexport const auth = getAuth(app);\nexport const db = getDatabase(app);\nexport const storage = getStorage(app);\n\nexport default app;\n"})}),"\n",(0,s.jsx)(n.h2,{id:"application-constants",children:"Application Constants"}),"\n",(0,s.jsxs)(n.p,{children:["The application uses constants for various settings. You can customize these in the ",(0,s.jsx)(n.code,{children:"constants.js"})," file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// src/config/constants.js\nexport const FILE_SIZE_LIMIT = parseInt(process.env.REACT_APP_MAX_FILE_SIZE || '10485760', 10);\nexport const ALLOWED_FILE_TYPES = [\n  'image/jpeg',\n  'image/png',\n  'image/gif',\n  'image/webp',\n  'application/pdf',\n  'text/plain',\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'application/vnd.ms-excel',\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n];\n\nexport const IMAGE_COMPRESSION_QUALITY = 0.8;\nexport const IMAGE_MAX_DIMENSION = 1200;\nexport const THUMBNAIL_SIZE = 200;\n\nexport const TYPING_DEBOUNCE_TIME = 1000; // 1 second\nexport const MESSAGE_PAGE_SIZE = 20;\nexport const MAX_MESSAGE_LENGTH = 2000;\nexport const MAX_GROUP_NAME_LENGTH = 30;\nexport const MAX_GROUP_DESCRIPTION_LENGTH = 100;\n\nexport const DEFAULT_AVATAR_URL = '/assets/default-avatar.png';\nexport const DEFAULT_GROUP_AVATAR_URL = '/assets/default-group.png';\n\nexport const APP_NAME = process.env.REACT_APP_NAME || 'React Chat';\n"})}),"\n",(0,s.jsx)(n.h2,{id:"theme-configuration",children:"Theme Configuration"}),"\n",(0,s.jsx)(n.p,{children:"The application supports theming through CSS variables. You can modify the default themes or add new ones:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:"/* src/styles/themes.css */\n:root {\n  /* Light theme (default) */\n  --color-primary: #4a6fdc;\n  --color-primary-dark: #3b5cb8;\n  --color-primary-light: #6f8fe5;\n  --color-secondary: #48bb78;\n  --color-secondary-dark: #38a169;\n  --color-secondary-light: #68d391;\n  --color-background: #ffffff;\n  --color-background-secondary: #f7fafc;\n  --color-text: #2d3748;\n  --color-text-secondary: #718096;\n  --color-border: #e2e8f0;\n  --color-success: #38a169;\n  --color-error: #e53e3e;\n  --color-warning: #dd6b20;\n  --color-info: #3182ce;\n  --message-bubble-self: #4a6fdc;\n  --message-bubble-self-text: #ffffff;\n  --message-bubble-other: #f2f2f2;\n  --message-bubble-other-text: #2d3748;\n  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n  --border-radius-sm: 4px;\n  --border-radius-md: 8px;\n  --border-radius-lg: 12px;\n  --spacing-xs: 4px;\n  --spacing-sm: 8px;\n  --spacing-md: 16px;\n  --spacing-lg: 24px;\n  --spacing-xl: 32px;\n  --font-size-xs: 0.75rem;\n  --font-size-sm: 0.875rem;\n  --font-size-md: 1rem;\n  --font-size-lg: 1.125rem;\n  --font-size-xl: 1.25rem;\n  --font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\n}\n\n/* Dark theme */\n[data-theme=\"dark\"] {\n  --color-primary: #63b3ed;\n  --color-primary-dark: #4299e1;\n  --color-primary-light: #90cdf4;\n  --color-secondary: #68d391;\n  --color-secondary-dark: #48bb78;\n  --color-secondary-light: #9ae6b4;\n  --color-background: #1a202c;\n  --color-background-secondary: #2d3748;\n  --color-text: #f7fafc;\n  --color-text-secondary: #a0aec0;\n  --color-border: #4a5568;\n  --color-success: #48bb78;\n  --color-error: #f56565;\n  --color-warning: #ed8936;\n  --color-info: #4299e1;\n  --message-bubble-self: #3182ce;\n  --message-bubble-self-text: #ffffff;\n  --message-bubble-other: #2d3748;\n  --message-bubble-other-text: #e2e8f0;\n  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.2);\n  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.3), 0 2px 4px -1px rgba(0, 0, 0, 0.2);\n  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.3), 0 4px 6px -2px rgba(0, 0, 0, 0.2);\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"feature-configuration",children:"Feature Configuration"}),"\n",(0,s.jsx)(n.p,{children:"You can enable or disable features in the application by modifying the respective contexts:"}),"\n",(0,s.jsx)(n.h3,{id:"chat-feature-configuration",children:"Chat Feature Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// src/contexts/ChatContext.jsx\n// ...\n\n// Feature flags\nconst FEATURES = {\n  messageReactions: true,      // Enable/disable emoji reactions\n  readReceipts: true,          // Enable/disable read receipts\n  typingIndicators: true,      // Enable/disable typing indicators\n  messageSearch: true,         // Enable/disable message search\n  voiceMessages: true,         // Enable/disable voice messages\n  imageCompression: true,      // Enable/disable image compression before upload\n  userBlocking: true,          // Enable/disable user blocking\n  messageEditing: true,        // Enable/disable message editing\n  messageDeletion: true,       // Enable/disable message deletion\n  groupChats: true,            // Enable/disable group chat functionality\n  chatHistory: true,           // Enable/disable loading message history\n  mediaPreview: true,          // Enable/disable file preview for images\n};\n\n// ...\n\n// Make feature flags available through context\nconst chatContextValue = {\n  // ...other context values\n  features: FEATURES,\n};\n\nreturn (\n  <ChatContext.Provider value={chatContextValue}>\n    {children}\n  </ChatContext.Provider>\n);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"notification-configuration",children:"Notification Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// src/contexts/NotificationContext.jsx\n// ...\n\n// Notification settings\nconst NOTIFICATION_SETTINGS = {\n  browserNotifications: true,    // Enable/disable browser notifications\n  soundEnabled: true,            // Enable/disable notification sounds\n  notifyInFocus: false,          // Notify even when app is in focus\n  showSenderName: true,          // Show sender name in notification\n  showMessagePreview: true,      // Show message content in notification\n  notificationDuration: 5000,    // Auto-dismiss after 5 seconds\n  groupNotifications: true,      // Group multiple notifications\n  mentionNotifications: true,    // Special notification for @mentions\n};\n\n// ...\n"})}),"\n",(0,s.jsx)(n.h2,{id:"firebase-security-rules",children:"Firebase Security Rules"}),"\n",(0,s.jsx)(n.p,{children:"To secure your Firebase data, configure your security rules in the Firebase Console:"}),"\n",(0,s.jsx)(n.h3,{id:"realtime-database-rules",children:"Realtime Database Rules"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "rules": {\n    "users": {\n      ".read": "auth !== null",\n      "$userId": {\n        ".write": "auth !== null && auth.uid === $userId"\n      }\n    },\n    "chats": {\n      "$chatId": {\n        ".read": "auth !== null && (data.child(\'participants\').child(auth.uid).exists() || data.child(\'members\').child(auth.uid).exists())",\n        ".write": "auth !== null && (data.child(\'participants\').child(auth.uid).exists() || (data.child(\'members\').child(auth.uid).exists() && data.child(\'members\').child(auth.uid).child(\'role\').val() === \'admin\'))"\n      }\n    },\n    "messages": {\n      "$chatId": {\n        ".read": "auth !== null && root.child(\'chats\').child($chatId).child(\'participants\').child(auth.uid).exists() || root.child(\'chats\').child($chatId).child(\'members\').child(auth.uid).exists()",\n        "$messageId": {\n          ".write": "auth !== null && (newData.child(\'sender\').val() === auth.uid || data.child(\'sender\').val() === auth.uid)"\n        }\n      }\n    },\n    "userChats": {\n      "$userId": {\n        ".read": "auth !== null && auth.uid === $userId",\n        ".write": "auth !== null && auth.uid === $userId"\n      }\n    },\n    "typing": {\n      "$chatId": {\n        ".read": "auth !== null && root.child(\'chats\').child($chatId).child(\'participants\').child(auth.uid).exists() || root.child(\'chats\').child($chatId).child(\'members\').child(auth.uid).exists()",\n        "$userId": {\n          ".write": "auth !== null && auth.uid === $userId"\n        }\n      }\n    }\n  }\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"storage-rules",children:"Storage Rules"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"rules_version = '2';\nservice firebase.storage {\n  match /b/{bucket}/o {\n    match /user/{userId}/{allPaths=**} {\n      allow read: if request.auth != null;\n      allow write: if request.auth != null && request.auth.uid == userId;\n    }\n    \n    match /chat/{chatId}/{allPaths=**} {\n      allow read: if request.auth != null && (\n        exists(/databases/$(database)/documents/chats/$(chatId)/participants/$(request.auth.uid)) || \n        exists(/databases/$(database)/documents/chats/$(chatId)/members/$(request.auth.uid))\n      );\n      allow write: if request.auth != null && (\n        exists(/databases/$(database)/documents/chats/$(chatId)/participants/$(request.auth.uid)) || \n        exists(/databases/$(database)/documents/chats/$(chatId)/members/$(request.auth.uid))\n      );\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"performance-optimization-settings",children:"Performance Optimization Settings"}),"\n",(0,s.jsx)(n.p,{children:"You can tune performance-related settings in the application:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// src/config/performance.js\nexport const PERFORMANCE_SETTINGS = {\n  messageBatchSize: 20,           // Number of messages to load at once\n  messageScrollThreshold: 0.95,   // Scroll position threshold for loading more messages\n  imageCompressionQuality: 0.8,   // JPEG compression quality (0-1)\n  maxImageDimension: 1200,        // Max image dimension in pixels\n  userPresenceInterval: 60000,    // How often to update user presence (ms)\n  typingDebounceTime: 1000,       // Debounce time for typing indicator (ms)\n  messageCacheTime: 3600000,      // Message cache expiration time (1 hour)\n  offlineSupport: true,           // Enable Firebase offline persistence\n  serviceWorkerEnabled: true,     // Enable service worker for offline support\n  lazyLoadImages: true            // Lazy load images in messages\n};\n"})}),"\n",(0,s.jsx)(n.h2,{id:"customizing-components",children:"Customizing Components"}),"\n",(0,s.jsx)(n.p,{children:"You can customize the appearance and behavior of UI components by modifying their CSS modules:"}),"\n",(0,s.jsx)(n.h3,{id:"chat-message-styles",children:"Chat Message Styles"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:"/* src/components/chat/ChatMessage.module.css */\n.messageContainer {\n  display: flex;\n  margin-bottom: var(--spacing-md);\n  animation: fadeIn 0.3s ease-in-out;\n}\n\n.messageSelf {\n  justify-content: flex-end;\n}\n\n.messageOther {\n  justify-content: flex-start;\n}\n\n.avatar {\n  width: 36px;\n  height: 36px;\n  border-radius: 50%;\n  margin-right: var(--spacing-sm);\n  margin-top: var(--spacing-xs);\n}\n\n.messageContent {\n  max-width: 70%;\n}\n\n.bubble {\n  padding: var(--spacing-md);\n  border-radius: var(--border-radius-md);\n  position: relative;\n  word-wrap: break-word;\n}\n\n.bubbleSelf {\n  background-color: var(--message-bubble-self);\n  color: var(--message-bubble-self-text);\n  border-top-right-radius: var(--border-radius-sm);\n}\n\n.bubbleOther {\n  background-color: var(--message-bubble-other);\n  color: var(--message-bubble-other-text);\n  border-top-left-radius: var(--border-radius-sm);\n}\n\n.timestamp {\n  font-size: var(--font-size-xs);\n  color: var(--color-text-secondary);\n  margin-top: var(--spacing-xs);\n  text-align: right;\n}\n\n/* Add custom animation */\n@keyframes fadeIn {\n  from { opacity: 0; transform: translateY(10px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"firebase-cloud-functions",children:"Firebase Cloud Functions"}),"\n",(0,s.jsx)(n.p,{children:"For advanced features like push notifications or message processing, you can deploy Firebase Cloud Functions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"// functions/index.js\nconst functions = require('firebase-functions');\nconst admin = require('firebase-admin');\nadmin.initializeApp();\n\n// Notify users when they receive a new message\nexports.sendNotification = functions.database.ref('/messages/{chatId}/{messageId}')\n  .onCreate(async (snapshot, context) => {\n    const message = snapshot.val();\n    const { chatId } = context.params;\n    \n    // Skip notifications for system messages\n    if (message.type === 'system') return null;\n    \n    try {\n      // Get chat data to find participants\n      const chatRef = admin.database().ref(`/chats/${chatId}`);\n      const chatSnapshot = await chatRef.once('value');\n      const chat = chatSnapshot.val();\n      \n      if (!chat) return null;\n      \n      let recipientIds = [];\n      \n      if (chat.type === 'private') {\n        // For private chats, notify the other participant\n        recipientIds = Object.keys(chat.participants || {})\n          .filter(uid => uid !== message.sender);\n      } else if (chat.type === 'group') {\n        // For group chats, notify all members except sender\n        recipientIds = Object.keys(chat.members || {})\n          .filter(uid => uid !== message.sender);\n      }\n      \n      // Get sender data\n      const senderRef = admin.database().ref(`/users/${message.sender}`);\n      const senderSnapshot = await senderRef.once('value');\n      const sender = senderSnapshot.val() || {};\n      \n      // Send notification to each recipient\n      const notifications = recipientIds.map(async (recipientId) => {\n        // Check if the recipient has blocked the sender\n        const blockedRef = admin.database().ref(`/users/${recipientId}/blockedUsers/${message.sender}`);\n        const blockedSnapshot = await blockedRef.once('value');\n        \n        if (blockedSnapshot.exists() && blockedSnapshot.val() === true) {\n          // Skip notification if recipient has blocked sender\n          return null;\n        }\n        \n        // Get recipient's FCM token\n        const fcmTokenRef = admin.database().ref(`/users/${recipientId}/fcmToken`);\n        const fcmTokenSnapshot = await fcmTokenRef.once('value');\n        const fcmToken = fcmTokenSnapshot.val();\n        \n        if (!fcmToken) return null;\n        \n        // Create notification\n        const notification = {\n          title: chat.type === 'private' \n            ? sender.displayName || 'New message' \n            : `${sender.displayName || 'Someone'} in ${chat.name || 'group'}`,\n          body: message.type === 'file' \n            ? 'Sent a file' \n            : message.type === 'voice'\n              ? 'Sent a voice message'\n              : message.content || 'New message',\n          icon: sender.photoURL || '/assets/default-avatar.png',\n          click_action: `https://your-app-url.com/chat/${chatId}`,\n          sound: 'default'\n        };\n        \n        // Send FCM message\n        return admin.messaging().sendToDevice(fcmToken, {\n          notification,\n          data: {\n            chatId,\n            messageId: context.params.messageId,\n            senderId: message.sender,\n            type: message.type || 'text'\n          }\n        });\n      });\n      \n      return Promise.all(notifications);\n    } catch (error) {\n      console.error('Error sending notification:', error);\n      return null;\n    }\n  });\n"})}),"\n",(0,s.jsx)(n.h3,{id:"progressive-web-app-configuration",children:"Progressive Web App Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Configure the Progressive Web App (PWA) features by modifying the ",(0,s.jsx)(n.code,{children:"manifest.json"})," file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "short_name": "Chat App",\n  "name": "React Firebase Chat App",\n  "icons": [\n    {\n      "src": "favicon.ico",\n      "sizes": "64x64 32x32 24x24 16x16",\n      "type": "image/x-icon"\n    },\n    {\n      "src": "logo192.png",\n      "type": "image/png",\n      "sizes": "192x192"\n    },\n    {\n      "src": "logo512.png",\n      "type": "image/png",\n      "sizes": "512x512"\n    }\n  ],\n  "start_url": ".",\n  "display": "standalone",\n  "theme_color": "#4a6fdc",\n  "background_color": "#ffffff",\n  "description": "A real-time chat application built with React and Firebase",\n  "orientation": "portrait-primary",\n  "categories": ["social", "communication"],\n  "shortcuts": [\n    {\n      "name": "Open Messages",\n      "short_name": "Messages",\n      "description": "View your messages",\n      "url": "/messages",\n      "icons": [{ "src": "/icons/message.png", "sizes": "192x192" }]\n    },\n    {\n      "name": "Open Profile",\n      "short_name": "Profile",\n      "description": "View your profile",\n      "url": "/profile",\n      "icons": [{ "src": "/icons/profile.png", "sizes": "192x192" }]\n    }\n  ],\n  "screenshots": [\n    {\n      "src": "/screenshots/chat.png",\n      "type": "image/png",\n      "sizes": "320x640",\n      "platform": "narrow",\n      "label": "Chat Interface"\n    },\n    {\n      "src": "/screenshots/home.png",\n      "type": "image/png",\n      "sizes": "320x640",\n      "platform": "narrow",\n      "label": "Home Screen"\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"white-labeling",children:"White-labeling"}),"\n",(0,s.jsx)(n.p,{children:"To white-label the application for your brand, update these key files:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Environment variables"}),": Update the app name and description"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Theme colors"}),": Modify the CSS variables to match your brand colors"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Assets"}),": Replace default images in the ",(0,s.jsx)(n.code,{children:"public/assets"})," directory"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Logo"}),": Replace the logo in the header component"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Text content"}),": Update text in main components like welcome screens and headers"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"debugging-and-testing",children:"Debugging and Testing"}),"\n",(0,s.jsx)(n.p,{children:"Enable debugging tools and test configurations by setting environment variables:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"# For development\nREACT_APP_DEBUG_MODE=true\nREACT_APP_LOG_LEVEL=verbose\nREACT_APP_MOCK_FIREBASE=false\nREACT_APP_TEST_ACCOUNT_EMAIL=test@example.com\nREACT_APP_TEST_ACCOUNT_PASSWORD=testpassword123\n"})}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"This configuration guide provides an overview of the many ways you can customize the React Firebase Chat Application. For more specific customization needs, refer to the relevant component and context documentation, or explore the source code directly."})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var a=t(6540);const s={},i=a.createContext(s);function o(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);